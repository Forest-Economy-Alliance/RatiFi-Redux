self.addEventListener("install",t=>{t.waitUntil(caches.open("app-static-v1").then(t=>t.addAll(["/","/index.html","/static/js/bundle.js","/offline.html"]))),self.skipWaiting()}),self.addEventListener("activate",t=>{t.waitUntil(caches.keys().then(t=>Promise.all(t.map(t=>{if("app-static-v1"!==t)return caches.delete(t)})))),self.clients.claim()}),self.addEventListener("fetch",t=>{t.request.url.startsWith("http")&&("navigate"===t.request.mode?t.respondWith(caches.match("/index.html").then(e=>e||fetch(t.request).then(e=>caches.open("app-static-v1").then(n=>(n.put(t.request,e.clone()),e))).catch(()=>caches.match("/offline.html")))):t.respondWith(caches.match(t.request).then(e=>e||fetch(t.request).then(e=>caches.open("app-static-v1").then(n=>(n.put(t.request,e.clone()),e))).catch(t=>{console.error("Fetch failed:",t)}))))}),self.addEventListener("sync",t=>{"sync-claim-docs"===t.tag&&t.waitUntil(syncPendingClaims())});const syncPendingClaims=async()=>{console.log("Syncing pending claims...")};