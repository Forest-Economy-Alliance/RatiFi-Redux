const CACHE_VERSION=`app-static-${(new Date).toISOString()}`;self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_VERSION).then((e=>e.addAll(["/","/index.html","/offline.html"])))),self.skipWaiting()})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_VERSION)return console.log("Deleting old cache:",e),caches.delete(e)})))))),self.clients.claim()})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&e.request.url.startsWith("http")&&e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{const a=t.clone();return"GET"===e.request.method&&caches.open(CACHE_VERSION).then((t=>{t.put(e.request,a)})),t})).catch((()=>caches.match("/offline.html"))))))})),self.addEventListener("sync",(e=>{"sync-claim-docs"===e.tag&&e.waitUntil(syncPendingClaims())}));const syncPendingClaims=async()=>{console.log("Syncing pending claims...");try{const e=await openDB(),t=e.transaction("claim-images","readonly").objectStore("claim-images"),a=await t.getAll();if(Array.isArray(a)&&a.length>0)for(const t of a)try{console.log("Uploading image:",t);const a={fileName:"DUMMY_NAME",base64Data:await blobToBase64(t.blob),userId:t?.userId,isPdf:!1},n="https://4kmtkz4pcv.us-east-1.awsapprunner.com",s=await fetch(`${n}/get-gcp-url`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(s.ok){const a=(await s.json()).response.Location;console.log("Image uploaded successfully:",a);e.transaction("claim-images","readwrite").objectStore("claim-images").delete(t.id),console.log("Image removed from IndexedDB:",t.id)}else console.error("Failed to upload image:",s.statusText)}catch(e){console.error("Error uploading image:",e)}else console.log("No images to sync")}catch(e){console.error("Error syncing pending claims:",e)}};function blobToBase64(e){return new Promise(((t,a)=>{const n=new FileReader;n.onloadend=()=>t(n.result.split(",")[1]),n.onerror=a,n.readAsDataURL(e)}))}function openDB(){return new Promise(((e,t)=>{const a=indexedDB.open("ClaimSyncDB",1);a.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("claim-images")||t.createObjectStore("claim-images",{keyPath:"id",autoIncrement:!0}),t.objectStoreNames.contains("claims")||t.createObjectStore("claims",{keyPath:"claimId"})},a.onsuccess=()=>e(a.result),a.onerror=e=>t(e.target.error)}))}